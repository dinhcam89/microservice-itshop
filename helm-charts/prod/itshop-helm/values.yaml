global:
  environment: production

images:
  registry: harbor.dinhcam.tech/prod-registry
  pullPolicy: IfNotPresent
  tag: v1.0.4-prod
  pullSecret: harbor-prod-registry-secret

services:
  apiGateway:
    name: api-gateway
    port: 9000
    replicas: 1
  frontend:
    name: frontend
    port: 80
    replicas: 1
  identityService:
    name: identity-service
    port: 8087
    replicas: 1
  inventoryService:
    name: inventory-service
    port: 8082
    replicas: 1
  notificationService:
    name: notification-service
    port: 8083
    replicas: 1
  orderService:
    name: order-service
    port: 8081
    replicas: 1
  productService:
    name: product-service
    port: 8080
    replicas: 1

config:
  common:
    PRODUCT_SERVICE_URL: "http://product-service-active.app.svc.cluster.local:8080"
    ORDER_SERVICE_URL: "http://order-service-active.app.svc.cluster.local:8081"
    INVENTORY_SERVICE_URL: "http://inventory-service-active.app.svc.cluster.local:8082"
    SPRING_KAFKA_BOOTSTRAP-SERVERS: "broker.app.svc.cluster.local:29092"
    IDENTITY_SERVICE_URL: "http://identity-service-active.app.svc.cluster.local:8087"
  
  identityService:
    SPRING_DATASOURCE_URL: "jdbc:mysql://mysql.app.svc.cluster.local:3306/identity_service"
  
  inventoryService:
    SPRING_DATASOURCE_URL: "jdbc:mysql://mysql.app.svc.cluster.local:3306/inventory_service"
  
  notificationService:
    SPRING_KAFKA_CONSUMER_PROPERTIES_SCHEMA_REGISTRY_URL: "http://schema-registry.app.svc.cluster.local:8081"
  
  orderService:
    SPRING_DATASOURCE_URL: "jdbc:mysql://mysql.app.svc.cluster.local:3306/order_service"
    SPRING_KAFKA_PRODUCER_PROPERTIES_SCHEMA_REGISTRY_URL: "http://schema-registry.app.svc.cluster.local:8081"